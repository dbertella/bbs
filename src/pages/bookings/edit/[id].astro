---
import Layout from "../../../layouts/Layout.astro";
import { app } from "../../../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import { formatHouseName } from "../../../utils/house";
import type { BookingIn } from "../../../type";


const { id } = Astro.params;

if (!id) {
    return Astro.redirect("/404");
}

const db = getFirestore(app);
const bookingsRef = db.collection("bookings");
const bookingSnapshot = await bookingsRef.doc(id).get();

if (!bookingSnapshot.exists) {
    return Astro.redirect("/404");
}

const booking = bookingSnapshot.data() as BookingIn;
if (!booking) {
    return Astro.redirect("/404");
}

const formattedHouse = formatHouseName(booking.house);
const dateFrom = booking.dateFrom.toDate();
const dateTo = booking.dateTo.toDate();

// Format dates for input fields (YYYY-MM-DD)
const formatDateForInput = (date: Date) => {
    return date.toISOString().split('T')[0];
};

const OPTIONS = ['1', '2', '3', '4', '5', '6 or plus']
---

<Layout title={`Edit Booking - ${formattedHouse}`}>
    <div class="bg-gray-100 flex flex-col items-center py-8">
        <div class="flex flex-col gap-8 w-full max-w-4xl">
            <!-- Header with Breadcrumb -->
            <div class="bg-white rounded-xl shadow-md p-6">
                <nav class="flex mb-4" aria-label="Breadcrumb">
                    <ol class="flex items-center space-x-4">
                        <li>
                            <a href="/" class="text-gray-400 hover:text-gray-500">
                                <svg class="h-5 w-5 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor">
                                    <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z" />
                                </svg>
                                <span class="sr-only">Home</span>
                            </a>
                        </li>
                        <li>
                            <div class="flex items-center">
                                <svg class="h-5 w-5 flex-shrink-0 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M5.555 17.776l8-16 .894.448-8 16-.894-.448z" />
                                </svg>
                                <a href="/bookings" class="ml-4 text-gray-400 hover:text-gray-500">
                                    Bookings
                                </a>
                            </div>
                        </li>
                        <li>
                            <div class="flex items-center">
                                <svg class="h-5 w-5 flex-shrink-0 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M5.555 17.776l8-16 .894.448-8 16-.894-.448z" />
                                </svg>
                                <a href={`/bookings/${id}`} class="ml-4 text-gray-400 hover:text-gray-500">
                                    {formattedHouse}
                                </a>
                            </div>
                        </li>
                        <li>
                            <div class="flex items-center">
                                <svg class="h-5 w-5 flex-shrink-0 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M5.555 17.776l8-16 .894.448-8 16-.894-.448z" />
                                </svg>
                                <span class="ml-4 text-gray-500">Edit</span>
                            </div>
                        </li>
                    </ol>
                </nav>

                <h1 class="text-2xl font-bold text-gray-900">Edit Booking</h1>
            </div>

            <!-- Edit Form -->
            <div class="bg-white rounded-xl shadow-md p-6">
                <form action={`/api/bookings/${id}`} method="post" class="space-y-4">
                    <div>
                        <label
                            for="house"
                            class="block text-sm font-medium text-gray-700 mb-1"
                        >Where to</label>
                        <select
                            name="house"
                            id="house"
                            required
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white"
                        >
                            <option value="SERRA" selected={booking.house === "SERRA"}>La serra</option>
                            <option value="SOLARO" selected={booking.house === "SOLARO"}>Solaro</option>
                        </select>
                    </div>
                    <div class="flex gap-2">
                        <div class="flex-1">
                            <label
                                for="start-date"
                                class="block text-sm font-medium text-gray-700 mb-1"
                            >Start Date</label>
                            <input
                                type="date"
                                name="dateFrom"
                                id="start-date"
                                required
                                value={formatDateForInput(dateFrom)}
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                            />
                        </div>
                        <div class="flex-1">
                            <label
                                for="end-date"
                                class="block text-sm font-medium text-gray-700 mb-1"
                            >End Date</label>
                            <input
                                type="date"
                                name="dateTo"
                                id="end-date"
                                required
                                value={formatDateForInput(dateTo)}
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                            />
                        </div>
                    </div>
                    <div>
                        <label
                            for="numberPeople"
                            class="block text-sm font-medium text-gray-700 mb-1"
                        >Number of people</label>
                        <select
                            name="numberPeople"
                            id="numberPeople"
                            required
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white"
                            value={booking.numberPeople}
                        >
                            {OPTIONS.map(opt => <option value={opt} selected={booking.numberPeople === opt}>{opt}</option>)}
                        </select>
                    </div>
                    <div>
                        <label
                            for="notes"
                            class="block text-sm font-medium text-gray-700 mb-1"
                        >Notes</label>
                        <textarea
                            id="notes"
                            name="notes"
                            rows="4"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                        >{booking.notes}</textarea>
                    </div>
                    <div class="flex justify-end space-x-3">
                        <a
                            href={`/bookings/${id}`}
                            class="py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
                        >
                            Cancel
                        </a>
                        <button
                            type="submit"
                            class="w-32 bg-blue-600 text-white py-2 rounded-lg font-semibold hover:bg-blue-700 transition-colors"
                        >
                            Save Changes
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</Layout>

<script>
    import { setupDateValidation } from "../../../utils/dateValidation";

    // Get form elements
    const startDateInput = document.getElementById('start-date') as HTMLInputElement;
    const endDateInput = document.getElementById('end-date') as HTMLInputElement;

    if (startDateInput && endDateInput) {
        setupDateValidation(startDateInput, endDateInput);
    }
</script>
