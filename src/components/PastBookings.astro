---
import { app } from "../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import { getAuth } from "firebase-admin/auth";
import { formatDate } from "../utils/date";
import { formatHouseName } from "../utils/house";
import type { BookingIn } from "../type";
import { getFamilyInfo } from "../utils/getFamilyInfo";


// Initialize Firebase services
const db = getFirestore(app);
const auth = getAuth(app);
const bookingsRef = db.collection("bookings");

// Get current date at midnight
const today = new Date();
today.setHours(0, 0, 0, 0);

// Get past and active bookings (any booking that has started)
const bookingsSnapshot = await bookingsRef
    .where('dateFrom', '<', today)
    .orderBy('dateFrom', 'desc')
    .limit(5)
    .get();

// Process bookings data
const bookings = await Promise.all(
    bookingsSnapshot.docs.map(async (doc) => {
        const data = doc.data() as BookingIn;
        const user = await auth.getUser(data.userId);
        const family = await getFamilyInfo(user.email);
        const dateFrom = data.dateFrom.toDate();
        const dateTo = data.dateTo.toDate();
        const isPast = dateTo < today;
        return {
            id: doc.id,
            house: formatHouseName(data.house),
            dateFrom,
            dateTo,
            userId: data.userId,
            userName: user.displayName || 'Unknown User',
            familyName: family?.name,
            familyColor: family?.color,
            isPast
        };
    })
);
---

<div class="bg-white rounded-xl shadow-md p-6">
    <h2 class="text-lg font-semibold mb-4">
        Past & Active Bookings
    </h2>
    {bookings.length > 0 ? (
        <ul class="space-y-3 text-left">
            {bookings.map((booking) => (
                <li>
                    <a href={`/bookings/${booking.id}`} class="block hover:bg-gray-50 -mx-2 px-2 py-2 rounded-md transition-colors">
                        <div class="flex flex-col gap-1">
                            <div class="flex items-center gap-2">
                                <span class={`inline-block w-2 h-2 rounded-full ${booking.isPast ? 'bg-gray-500' : 'bg-green-500'} flex-shrink-0`}></span>
                                <span class="font-medium">
                                    {formatDate(booking.dateFrom)} - {formatDate(booking.dateTo)}
                                </span>
                            </div>
                            <div class="flex items-center gap-2 ml-4">
                                <span class="text-gray-600">{booking.house}</span>
                                <span class="text-gray-500 text-sm">• {booking.userName}</span>
                                <span class="text-sm">• <span class="inline-block w-2 h-2 rounded-full mr-1" style={{ background: booking.familyColor }} />{booking.familyName}</span>
                            </div>
                        </div>
                    </a>
                </li>
            ))}
        </ul>
    ) : (
        <div class="text-center py-6">
            <div class="text-gray-400">
                <svg class="mx-auto h-12 w-12 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <p class="text-gray-500 mb-1">No past bookings</p>
                <p class="text-sm text-gray-400">Your booking history will appear here</p>
            </div>
        </div>
    )}
</div> 